{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/GitHubClone/client/components/ToggleButton.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\nfunction ToggleButton(props) {\n  _s();\n\n  var _useState = useState(props.toggle),\n      toggle = _useState[0],\n      setToggle = _useState[1];\n\n  var onToggle = function onToggle() {\n    setToggle(!toggle);\n  };\n\n  return __jsx(\"div\", {\n    onClick: onToggle,\n    className: \"flex items-center h-8 w-14 p-1 rounded-full duration-300 ease-in-out cursor-pointer \".concat(!toggle ? \"bg-gray-200\" : \"bg-green-500\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"h-6 w-6 rounded-full bg-white shadow-md duration-300 ease-in-out transform \".concat(!toggle ? \"\" : \"translate-x-6\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ToggleButton, \"Vg9500byAKWLrMK0AP1xKorMELc=\");\n\n_c = ToggleButton;\nexport default ToggleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"sources":["/home/kevin/Documents/GitHubClone/client/components/ToggleButton.jsx"],"names":["React","useState","ToggleButton","props","toggle","setToggle","onToggle"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAAA,kBACCF,QAAQ,CAACE,KAAK,CAACC,MAAP,CADT;AAAA,MACpBA,MADoB;AAAA,MACZC,SADY;;AAG3B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,SACE;AACE,IAAA,OAAO,EAAEE,QADX;AAEE,IAAA,SAAS,gGAAyF,CAACF,MAAD,GAAU,aAAV,GAA0B,cAAnH,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,uFAAgF,CAACA,MAAD,GAAU,EAAV,GAAe,eAA/F,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;GAfQF,Y;;KAAAA,Y;AAiBT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToggleButton(props) {\n  const [toggle, setToggle] = useState(props.toggle);\n\n  const onToggle = () => {\n    setToggle(!toggle);\n  };\n\n  return (\n    <div\n      onClick={onToggle}\n      className={`flex items-center h-8 w-14 p-1 rounded-full duration-300 ease-in-out cursor-pointer ${!toggle ? \"bg-gray-200\" : \"bg-green-500\"}`}\n    >\n      <div className={`h-6 w-6 rounded-full bg-white shadow-md duration-300 ease-in-out transform ${!toggle ? \"\" : \"translate-x-6\"}`}/>\n    </div>\n  );\n}\n\nexport default ToggleButton;\n"]},"metadata":{},"sourceType":"module"}